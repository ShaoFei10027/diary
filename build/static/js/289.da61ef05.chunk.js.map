{"version":3,"file":"static/js/289.da61ef05.chunk.js","mappings":"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","sources":["api/index.ts","api/fetch.ts","pages/admin/translate/publish.tsx","webpack://diary/./src/pages/components/card/index.less?ce8c","pages/components/card/index.tsx","webpack://diary/./src/pages/admin/translate/index.less?fa9e"],"sourcesContent":["import { get as fetchGet, post as fetchPost } from './fetch';\r\nimport { QuestionType } from './api.d';\r\nimport { baseUrl } from '@/utils';\r\n\r\ninterface ParamsType {\r\n  [propsName: string]: any;\r\n}\r\n\r\nconst get = (url: string, params?: ParamsType) =>\r\n  fetchGet(baseUrl + url, params);\r\nconst post = (url: string, params?: ParamsType) =>\r\n  fetchPost(baseUrl + url, params);\r\n\r\nexport const login = (params: any) => post('/api/login', params);\r\nexport const checkLogin = () => get('/api/login');\r\nexport const logout = () => post('/api/logout');\r\nexport const getUser = () => get('/api/user');\r\n\r\nexport const getNews = () => get('/api/articles');\r\nexport const getArticle = (id: number) => get(`/api/article/${id}`);\r\nexport const publishArticle = (params: any) => post('/api/article', params);\r\n\r\nexport const getQuestions = () => get('/api/questions');\r\nexport const getQuestion = (id: number) => get(`/api/question/${id}`);\r\nexport const saveQuestion = (params: QuestionType) =>\r\n  post('/api/question', params);\r\n\r\nexport const getTranslateData = (params: any) =>\r\n  get('/api/getTranslateData', params);\r\nexport const updateTransDate = (params: any) =>\r\n  post('/api/updateTransDate', params);\r\nexport const getDulpTranslateData = () => get('/api/getDulpTranslateData');\r\n","import { message } from 'antd';\r\nimport { intl } from '@/locale';\r\ninterface ParamsType {\r\n  [propsName: string]: any;\r\n}\r\n//get请求封装\r\nexport const get = function (url: string, params: ParamsType = {}) {\r\n  let list = [];\r\n  for (let key in params) {\r\n    let str = `${key}=${params[key]}`;\r\n    list.push(str);\r\n  }\r\n  const data = list.join('&');\r\n  let allUrl = data ? `${url}?${data}` : url;\r\n  // debugger\r\n  return fetch(allUrl, { credentials: 'include' })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      message.error(intl.get('request_timeout'));\r\n      throw new Error(err);\r\n    });\r\n};\r\n// post请求封装\r\nexport const post = function (url: string, params: ParamsType = {}) {\r\n  const requestConfig = {\r\n    credentials: 'include',\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    mode: 'cors',\r\n    cache: 'force-cache',\r\n    body: JSON.stringify(params),\r\n  };\r\n  // @ts-ignore\r\n  return fetch(url, requestConfig)\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      message.error(intl.get('request_timeout'));\r\n      throw new Error(err);\r\n    });\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  LoadingOutlined,\r\n  SmileOutlined,\r\n  SolutionOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { Form, Button, Table, message, Alert, Steps } from 'antd';\r\nimport { getUser, getDulpTranslateData, updateTransDate } from '@/api';\r\nimport moment from 'moment';\r\nimport Card from '@/pages/components/card';\r\nimport styles from './index.less';\r\n\r\ninterface ListDataType {\r\n  id: number;\r\n  ukey: string;\r\n  english: string;\r\n  chinese: string;\r\n  update_time?: number;\r\n}\r\n\r\nconst { Step } = Steps;\r\n\r\nconst StepText = [\r\n  {\r\n    loading: {\r\n      title: '生成文件',\r\n      desc: '根据数据列表生成相应的数据文件',\r\n    },\r\n    finish: {\r\n      title: '已生成文件',\r\n    },\r\n  },\r\n  {\r\n    loading: {\r\n      title: '更新版本',\r\n      desc: '即将修改前端引入locale文件版本',\r\n    },\r\n    finish: {\r\n      title: '已更新依赖',\r\n    },\r\n  },\r\n  {\r\n    loading: {\r\n      title: '打包发布',\r\n      desc: '打包前端文件并发布',\r\n    },\r\n    finish: {\r\n      title: '发布完成',\r\n      desc: '已更新',\r\n    },\r\n  },\r\n];\r\n\r\nexport default function Publish() {\r\n  const [form] = Form.useForm();\r\n  const [listData, setListData] = useState<ListDataType[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [record, setRecord] = useState<ListDataType>();\r\n  const [visible, setVisible] = useState(false);\r\n  const getData = () => {\r\n    getDulpTranslateData()\r\n      .then((res) => {\r\n        if (res.success) {\r\n          setListData(res.data);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const onEdit = (record: ListDataType) => {\r\n    setRecord(record);\r\n    setVisible(true);\r\n  };\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  const onOk = (params: ListDataType) => {\r\n    updateTransDate(params).then((res) => {\r\n      if (res.success) {\r\n        message.success('修改成功！');\r\n        setVisible(false);\r\n        getData();\r\n      } else {\r\n        message.error(res?.data?.message || '修改失败');\r\n      }\r\n    });\r\n  };\r\n  const columns = [\r\n    {\r\n      title: '重复的key值',\r\n      dataIndex: 'ukey',\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: '英文',\r\n      dataIndex: 'english',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: '中文',\r\n      dataIndex: 'chinese',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: '最后修改时间',\r\n      dataIndex: 'update_time',\r\n      render: (v: number) => moment(v).format('YYYY-MM-DD HH:mm:ss'),\r\n      width: '200px',\r\n    },\r\n    {\r\n      title: '操作',\r\n      render: ({}, record: ListDataType) => (\r\n        <div className={styles.btnsLink}>\r\n          <Button type=\"link\" onClick={() => onEdit(record)}>\r\n            编辑\r\n          </Button>\r\n          <Button type=\"link\">删除</Button>\r\n        </div>\r\n      ),\r\n      width: '200px',\r\n    },\r\n  ];\r\n  return (\r\n    <div className={styles.page}>\r\n      <Card title=\"数据处理与发布\">\r\n        {listData && listData.length ? (\r\n          <Alert\r\n            message=\"检测到重复的key值，发布前请慎重处理！\"\r\n            type=\"warning\"\r\n          />\r\n        ) : (\r\n          <Alert\r\n            message=\"恭喜！所有key值唯一，现在开始发布吧！\"\r\n            type=\"success\"\r\n          />\r\n        )}\r\n        <div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <div style={{ margin: '20px', width: '720px' }}>\r\n              <Steps current={0}>\r\n                {StepText.map((item, i) => {\r\n                  return (\r\n                    <Step\r\n                      title={item.loading.title}\r\n                      description={item.loading.desc}\r\n                      icon={i > 0 ? <SmileOutlined /> : <LoadingOutlined />}\r\n                    />\r\n                  );\r\n                })}\r\n              </Steps>\r\n            </div>\r\n            <Button type=\"primary\" danger>\r\n              开始发布\r\n            </Button>\r\n          </div>\r\n          {listData && listData.length && (\r\n            <Table\r\n              columns={columns}\r\n              dataSource={listData}\r\n              rowKey=\"id\"\r\n              pagination={false}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"index_card__503-P\"};","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport styles from './index.less';\r\n\r\ninterface IProps {\r\n  title?: React.ReactNode;\r\n  extra?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  [propName: string]: any;\r\n}\r\nexport default function MyCard(props: IProps) {\r\n  const { title, extra, children, ...rest } = props;\r\n  return (\r\n    <Card className={styles.card} title={title} extra={extra} {...rest}>\r\n      {children}\r\n    </Card>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"index_page__J+1em\",\"search\":\"index_search__cL2Da\",\"btnsLink\":\"index_btnsLink__eVbkD\"};"],"names":["get","url","params","list","key","str","push","data","join","allUrl","fetch","credentials","then","res","json","catch","err","message","intl","Error","fetchGet","baseUrl","post","requestConfig","method","headers","Accept","mode","cache","body","JSON","stringify","fetchPost","login","checkLogin","logout","getUser","getNews","getArticle","id","publishArticle","getQuestions","getQuestion","saveQuestion","getTranslateData","updateTransDate","getDulpTranslateData","Step","Steps","StepText","loading","title","desc","finish","Publish","Form","useState","listData","setListData","setLoading","setRecord","setVisible","getData","success","finally","useEffect","columns","dataIndex","width","render","v","moment","format","record","className","styles","type","onClick","onEdit","length","style","margin","current","map","item","i","description","icon","danger","dataSource","rowKey","pagination","MyCard","props","extra","children","rest"],"sourceRoot":""}