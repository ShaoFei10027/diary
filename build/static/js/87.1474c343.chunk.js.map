{"version":3,"file":"static/js/87.1474c343.chunk.js","mappings":"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","sources":["api/index.ts","api/fetch.ts","pages/admin/translate/Edit.tsx","pages/admin/translate/index.tsx","webpack://diary/./src/pages/components/card/index.less?ce8c","pages/components/card/index.tsx","webpack://diary/./src/pages/admin/translate/index.less?fa9e"],"sourcesContent":["import { get as fetchGet, post as fetchPost } from './fetch';\r\nimport { QuestionType } from './api.d';\r\ninterface ParamsType {\r\n  [propsName: string]: any;\r\n}\r\nconst baseUrl = 'http://localhost:9000';\r\nconst get = (url: string, params?: ParamsType) =>\r\n  fetchGet(baseUrl + url, params);\r\nconst post = (url: string, params?: ParamsType) =>\r\n  fetchPost(baseUrl + url, params);\r\n\r\nexport const login = (params: any) => post('/api/login', params);\r\nexport const checkLogin = () => get('/api/login');\r\nexport const logout = () => post('/api/logout');\r\nexport const getUser = () => get('/api/user');\r\n\r\nexport const getNews = () => get('/api/articles');\r\nexport const getArticle = (id: number) => get(`/api/article/${id}`);\r\nexport const publishArticle = (params: any) => post('/api/article', params);\r\n\r\nexport const getQuestions = () => get('/api/questions');\r\nexport const getQuestion = (id: number) => get(`/api/question/${id}`);\r\nexport const saveQuestion = (params: QuestionType) =>\r\n  post('/api/question', params);\r\n\r\nexport const getTranslateData = (params: any) =>\r\n  get('/api/getTranslateData', params);\r\nexport const updateTransDate = (params: any) =>\r\n  post('/api/updateTransDate', params);\r\nexport const getDulpTranslateData = () => get('/api/getDulpTranslateData');\r\n","import { message } from 'antd';\r\nimport { intl } from '@/locale';\r\ninterface ParamsType {\r\n  [propsName: string]: any;\r\n}\r\n//get请求封装\r\nexport const get = function (url: string, params: ParamsType = {}) {\r\n  let list = [];\r\n  for (let key in params) {\r\n    let str = `${key}=${params[key]}`;\r\n    list.push(str);\r\n  }\r\n  const data = list.join('&');\r\n  let allUrl = data ? `${url}?${data}` : url;\r\n  // debugger\r\n  return fetch(allUrl, { credentials: 'include' })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      message.error(intl.get('request_timeout'));\r\n      throw new Error(err);\r\n    });\r\n};\r\n// post请求封装\r\nexport const post = function (url: string, params: ParamsType = {}) {\r\n  const requestConfig = {\r\n    credentials: 'include',\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    mode: 'cors',\r\n    cache: 'force-cache',\r\n    body: JSON.stringify(params),\r\n  };\r\n  // @ts-ignore\r\n  return fetch(url, requestConfig)\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      message.error(intl.get('request_timeout'));\r\n      throw new Error(err);\r\n    });\r\n};\r\n","import { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Modal, Form, Input, ModalProps } from 'antd';\r\n\r\ninterface DataType {\r\n  id: number;\r\n  ukey: string;\r\n  english: string;\r\n  chinese: string;\r\n  update_time?: number;\r\n}\r\ninterface IProps {\r\n  visible: boolean;\r\n  data?: DataType;\r\n  onCancel?: Function;\r\n  onOk?: Function;\r\n}\r\n\r\nexport default function Edit(props: IProps) {\r\n  const [form] = Form.useForm();\r\n  const { visible, data, onOk, onCancel } = props;\r\n  const onClose = () => {\r\n    onCancel && onCancel();\r\n  };\r\n  const onFinish = () => {\r\n    const formData = form.getFieldsValue();\r\n    data &&\r\n      onOk &&\r\n      onOk({\r\n        ...formData,\r\n        id: data.id,\r\n      });\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"编辑\"\r\n      visible={visible}\r\n      onOk={onFinish}\r\n      onCancel={onClose}\r\n      width=\"720px\"\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 14 }}>\r\n        <Form.Item label=\"key\" name=\"ukey\" initialValue={data?.ukey}>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"英文\" name=\"english\" initialValue={data?.english}>\r\n          <Input.TextArea autoSize={{ maxRows: 4, minRows: 4 }} />\r\n        </Form.Item>\r\n        <Form.Item label=\"中文\" name=\"chinese\" initialValue={data?.chinese}>\r\n          <Input.TextArea autoSize={{ maxRows: 4, minRows: 4 }} />\r\n        </Form.Item>\r\n        <Form.Item label=\"最后更新时间\">\r\n          <Input\r\n            disabled\r\n            value={moment(data?.update_time).format('YYYY-MM-DD HH:mm:ss')}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, DatePicker, Button, Table, message } from 'antd';\r\nimport { getUser, getTranslateData, updateTransDate } from '@/api';\r\nimport moment from 'moment';\r\nimport Card from '@/pages/components/card';\r\nimport EditModal from './Edit';\r\nimport styles from './index.less';\r\n\r\ninterface ListDataType {\r\n  id: number;\r\n  ukey: string;\r\n  english: string;\r\n  chinese: string;\r\n  update_time?: number;\r\n}\r\n\r\ninterface SearchDataType {\r\n  ukey?: string;\r\n  startTime?: number;\r\n  endTime?: number;\r\n}\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function Translate() {\r\n  const [form] = Form.useForm();\r\n  const [listData, setListData] = useState<ListDataType[]>([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [record, setRecord] = useState<ListDataType>();\r\n  const [visible, setVisible] = useState(false);\r\n  const getData = () => {\r\n    const { key, time } = form.getFieldsValue();\r\n    const searchData: SearchDataType = {};\r\n    if (key) {\r\n      searchData.ukey = key;\r\n    }\r\n    if (time) {\r\n      searchData.startTime = time[0].format();\r\n      searchData.endTime = time[1].format();\r\n    }\r\n    getTranslateData({\r\n      page,\r\n      pageSize,\r\n      ...searchData,\r\n    })\r\n      .then((res) => {\r\n        if (res.success) {\r\n          setListData(res.data.list);\r\n          setTotal(res.data.total);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n  const onPageChange = (page: number, pageSize: number) => {\r\n    setPage(page);\r\n    setPageSize(pageSize);\r\n  };\r\n  const onSearch = () => {\r\n    setLoading(true);\r\n    if (page === 1) {\r\n      getData();\r\n    } else {\r\n      setPage(1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, pageSize]);\r\n  const onEdit = (record: ListDataType) => {\r\n    setRecord(record);\r\n    setVisible(true);\r\n  };\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  const onOk = (params: ListDataType) => {\r\n    updateTransDate(params).then((res) => {\r\n      if (res.success) {\r\n        message.success('修改成功！');\r\n        setVisible(false);\r\n        getData();\r\n      } else {\r\n        message.error(res?.data?.message || '修改失败');\r\n      }\r\n    });\r\n  };\r\n  const columns = [\r\n    {\r\n      title: 'key',\r\n      dataIndex: 'ukey',\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: '英文',\r\n      dataIndex: 'english',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: '中文',\r\n      dataIndex: 'chinese',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: '最后修改时间',\r\n      dataIndex: 'update_time',\r\n      render: (v: number) => moment(v).format('YYYY-MM-DD HH:mm:ss'),\r\n      width: '200px',\r\n    },\r\n    {\r\n      title: '操作',\r\n      render: ({}, record: ListDataType) => (\r\n        <div className={styles.btnsLink}>\r\n          <Button type=\"link\" onClick={() => onEdit(record)}>\r\n            编辑\r\n          </Button>\r\n          <Button type=\"link\">删除</Button>\r\n        </div>\r\n      ),\r\n      width: '200px',\r\n    },\r\n  ];\r\n  return (\r\n    <div className={styles.page}>\r\n      <Card title=\"数据列表\">\r\n        <div className={styles.search}>\r\n          <Form form={form} layout=\"inline\">\r\n            <Form.Item label=\"关键词\" name=\"key\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"更新时间\" name=\"time\">\r\n              <RangePicker placeholder={['开始时间', '结束时间']} />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" loading={loading} onClick={onSearch}>\r\n                搜索\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <div>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={listData}\r\n            rowKey=\"id\"\r\n            pagination={{\r\n              total,\r\n              onChange: onPageChange,\r\n            }}\r\n          />\r\n          {record && (\r\n            <EditModal\r\n              visible={visible}\r\n              data={record}\r\n              onCancel={onCancel}\r\n              onOk={onOk}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"index_card__503-P\"};","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport styles from './index.less';\r\n\r\ninterface IProps {\r\n  title?: React.ReactNode;\r\n  extra?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  [propName: string]: any;\r\n}\r\nexport default function MyCard(props: IProps) {\r\n  const { title, extra, children, ...rest } = props;\r\n  return (\r\n    <Card className={styles.card} title={title} extra={extra} {...rest}>\r\n      {children}\r\n    </Card>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"index_page__J+1em\",\"search\":\"index_search__cL2Da\",\"btnsLink\":\"index_btnsLink__eVbkD\"};"],"names":["baseUrl","get","url","params","list","key","str","push","data","join","allUrl","fetch","credentials","then","res","json","catch","err","message","intl","Error","fetchGet","post","requestConfig","method","headers","Accept","mode","cache","body","JSON","stringify","fetchPost","login","checkLogin","logout","getUser","getNews","getArticle","id","publishArticle","getQuestions","getQuestion","saveQuestion","getTranslateData","updateTransDate","getDulpTranslateData","Edit","props","Form","form","visible","onOk","onCancel","title","formData","getFieldsValue","width","okText","cancelText","labelCol","span","wrapperCol","label","name","initialValue","ukey","english","autoSize","maxRows","minRows","chinese","disabled","value","moment","update_time","format","RangePicker","DatePicker","Translate","useState","listData","setListData","total","setTotal","pageSize","setPageSize","page","setPage","loading","setLoading","record","setRecord","setVisible","getData","time","searchData","startTime","endTime","success","finally","useEffect","columns","dataIndex","render","v","className","styles","type","onClick","onEdit","layout","placeholder","dataSource","rowKey","pagination","onChange","MyCard","extra","children","rest"],"sourceRoot":""}